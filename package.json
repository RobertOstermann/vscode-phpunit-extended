{
  "name": "phpunit-extended-test-explorer",
  "displayName": "PHPUnit Extended with TestExplorer",
  "description": "Run PHPUnit tests from VSCode with native testing through the test explorer.",
  "version": "1.1.1",
  "publisher": "RobertOstermann",
  "icon": "images/phpunit.png",
  "engines": {
    "vscode": "^1.59.0"
  },
  "categories": [
    "Other"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/RobertOstermann/vscode-phpunit-extended"
  },
  "homepage": "https://github.com/RobertOstermann/vscode-phpunit-extended/blob/master/README.md",
  "bugs": {
    "url": "https://github.com/RobertOstermann/vscode-phpunit-extended/issues"
  },
  "license": "MIT",
  "keywords": [
    "phpunit",
    "test",
    "php"
  ],
  "activationEvents": [
    "workspaceContains:**/*.php"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "commands": [
      {
        "command": "phpunit.Test",
        "title": "PHPUnit Test"
      },
      {
        "command": "phpunit.TestFile",
        "title": "PHPUnit Test Current File"
      },
      {
        "command": "phpunit.TestSuite",
        "title": "PHPUnit Test All Suite"
      },
      {
        "command": "phpunit.TestSuiteWithExclusions",
        "title": "PHPUnit Test All Suite With Exclusions"
      },
      {
        "command": "phpunit.TestNearest",
        "title": "PHPUnit Test Nearest"
      },
      {
        "command": "phpunit.LastTest",
        "title": "PHPUnit Run Last Test"
      },
      {
        "command": "phpunit.CancelCurrentTest",
        "title": "PHPUnit Cancel Current Test"
      }
    ],
    "configuration": {
      "title": "PHPUnit Configuration",
      "properties": {
        "phpunit.args": {
          "type": "array",
          "default": [],
          "description": "This is useful for setting the configuration settings shared between the command line and the test explorer."
        },
        "phpunit.configurationPath": {
          "type": "string",
          "default": "",
          "description": "Path to phpunit.xml configuration file (if empty it tries to use find the nearest configuration file)."
        },
        "phpunit.envVars": {
          "type": "object",
          "default": {},
          "title": "Set environment variables before running phpunit"
        },
        "phpunit.execPath": {
          "type": "string",
          "default": "",
          "description": "Path to phpunit executable (if empty it tries to use composer installation)."
        },
        "phpunit.pathMapping": {
          "type": "object",
          "default": {},
          "description": "The path mapping. Keys are local (host) paths and values are remote (guest) paths."
        },
        "phpunit.workingDirectory": {
          "type": "string",
          "default": "Find",
          "markdownDescription": "This determines the working directory of the process that runs the test commands. Set to `Find` to find the working directory based upon the `phpunit.xml` or `phpunit.xml.dist` path. Set to `Parent` to use the working directory of the parent process."
        },
        "phpunit.commandLine.args": {
          "type": "array",
          "default": [],
          "description": "Any phpunit args (phpunit --help)"
        },
        "phpunit.commandLine.excludedGroups": {
          "type": "array",
          "default": [],
          "description": "Groups to be excluded from the tests"
        },
        "phpunit.commandLine.scriptsAfterTests": {
          "type": "object",
          "default": {
            "ok": [],
            "error": []
          },
          "description": "Scripts to execute after the tests run"
        },
        "phpunit.commandLine.showOutput": {
          "type": "string",
          "enum": [
            "always",
            "error",
            "ok"
          ],
          "default": "always",
          "description": "Show the output console after the tests run (always, error, ok)."
        },
        "phpunit.commandLine.showOutputInTerminal": {
          "type": "boolean",
          "default": false,
          "description": "Re-run the test and show the output within a terminal instead of an output channel. This only occurs when the conditions in `phpunit.commandLine.showOutput` are met."
        },
        "phpunit.testExplorer.args": {
          "type": "array",
          "default": [],
          "description": "This is useful for setting the configuration. Warning: some arguments, such as --testdox, will not allow the test explorer tests to pass."
        },
        "phpunit.testExplorer.discoverAllTests": {
          "type": "boolean",
          "default": true,
          "description": "Determines whether to discover all tests immediately or discover them individually once opened in the editor."
        },
        "phpunit.testExplorer.fileRegex": {
          "type": "string",
          "default": ".*(test|tests)\\w*\\.php",
          "description": "The regular expression used to determine test files."
        },
        "phpunit.testExplorer.folderPattern": {
          "type": "string",
          "default": "**/{test,tests,Test,Tests}/**/*.php",
          "description": "A file glob pattern used to determine the folders to watch. Only used when discoverAllTests is set to true."
        },
        "phpunit.testExplorer.functionRegex": {
          "type": "string",
          "default": "\\s*(public\\s+){0,1}function\\s+(\\w*test\\w*)\\s*\\(",
          "description": "The regular expression used to determine the functions within a file to test."
        },
        "phpunit.testExplorer.multilineFunctionRegex": {
          "type": "boolean",
          "default": false,
          "description": "Determines if the functionRegex looks at multiple lines. This is useful if the test is defined by an annotation comment."
        },
        "phpunit.testExplorer.parallelTests": {
          "type": "number",
          "default": 0,
          "description": "The number of tests to run in parallel in the test explorer."
        },
        "phpunit.testExplorer.showOutput": {
          "type": "string",
          "enum": [
            "always",
            "error",
            "never"
          ],
          "default": "never",
          "description": "Show the output console after the tests run (always, error, never)."
        },
        "phpunit.testExplorer.showOutputInTerminal": {
          "type": "boolean",
          "default": false,
          "description": "Re-run the test and show the output within a terminal instead of an output channel. This only occurs when the conditions in `phpunit.testExplorer.showOutput` are met."
        },
        "phpunit.testExplorer.timeout": {
          "type": "number",
          "default": 0,
          "description": "The time (seconds) to allow a test to run."
        },
        "phpunit.testExplorer.verboseTestExplorerOutput": {
          "type": "boolean",
          "default": false,
          "description": "Setting to true forces test explorer to run individual tests instead of only running the class test to get output for each test."
        },
        "phpunit.docker.command": {
          "type": "string",
          "default": "docker exec -it <container>",
          "description": "The Docker command to execute a container."
        },
        "phpunit.docker.enable": {
          "type": "boolean",
          "default": false,
          "description": "Run tests in a Docker container."
        },
        "phpunit.ssh.command": {
          "type": "string",
          "default": "ssh user@host",
          "description": "The path (and flags) to an SSH-compatible binary."
        },
        "phpunit.ssh.enable": {
          "type": "boolean",
          "default": false,
          "description": "Run tests over ssh"
        }
      }
    },
    "grammars": [
      {
        "language": "Log",
        "scopeName": "code.log",
        "path": "./syntaxes/phpunit.tmLanguage"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run -S esbuild-base -- --minify",
    "compile": "rimraf out && tsc -p ./",
    "watch": "tsc -watch -p ./",
    "test": "node ./node_modules/vscode/bin/test",
    "download-api": "vscode-dts dev",
    "postdownload-api": "vscode-dts main",
    "postinstall": "npm run download-api",
    "esbuild-base": "rimraf out && esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run -S esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run -S esbuild-base -- --sourcemap --watch"
  },
  "devDependencies": {
    "@types/mocha": "^9.0.0",
    "@types/node": "^16.11.6",
    "@typescript-eslint/eslint-plugin": "^5.3.0",
    "@typescript-eslint/parser": "^5.3.0",
    "esbuild": "^0.13.10",
    "eslint": "^8.1.0",
    "eslint-plugin-simple-import-sort": "^7.0.0",
    "eslint-plugin-tsdoc": "^0.2.14",
    "mocha": "^9.1.3",
    "typescript": "^4.4.4",
    "vscode-dts": "^0.3.1"
  }
}
